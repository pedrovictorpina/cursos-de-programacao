/*
==============================================
CURSO DE JAVASCRIPT - M√ìDULO 2
ESTRUTURAS DE CONTROLE
==============================================

Neste m√≥dulo voc√™ aprender√°:
- Estruturas condicionais (if/else, switch)
- Operador tern√°rio
- Estruturas de repeti√ß√£o (for, while, do-while)
- Controle de fluxo (break, continue)
- Estruturas aninhadas
- Boas pr√°ticas e otimiza√ß√µes

==============================================
*/

// ==========================================
// 1. ESTRUTURAS CONDICIONAIS - IF/ELSE
// ==========================================

/*
As estruturas condicionais permitem que o c√≥digo tome decis√µes
baseadas em condi√ß√µes verdadeiras ou falsas.

Sintaxe b√°sica:
if (condi√ß√£o) {
    // c√≥digo executado se condi√ß√£o for true
} else {
    // c√≥digo executado se condi√ß√£o for false
}
*/

console.log("=== ESTRUTURAS CONDICIONAIS ===");

// Exemplo b√°sico
let idade = 20;

if (idade >= 18) {
    console.log("Voc√™ √© maior de idade!");
} else {
    console.log("Voc√™ √© menor de idade!");
}

// If/else if/else - m√∫ltiplas condi√ß√µes
let nota = 8.5;

if (nota >= 9) {
    console.log("Excelente! Nota A");
} else if (nota >= 7) {
    console.log("Muito bom! Nota B");
} else if (nota >= 5) {
    console.log("Bom! Nota C");
} else {
    console.log("Precisa melhorar! Nota D");
}

// Condi√ß√µes compostas com operadores l√≥gicos
let temCarteira = true;
let temCarro = true;
let temCombustivel = false;

if (temCarteira && temCarro && temCombustivel) {
    console.log("Pode dirigir!");
} else if (temCarteira && temCarro && !temCombustivel) {
    console.log("Precisa abastecer primeiro!");
} else if (temCarteira && !temCarro) {
    console.log("Precisa de um carro!");
} else {
    console.log("Precisa tirar a carteira primeiro!");
}

// ==========================================
// 2. OPERADOR TERN√ÅRIO
// ==========================================

/*
O operador tern√°rio √© uma forma concisa de escrever if/else simples.
Sintaxe: condi√ß√£o ? valorSeVerdadeiro : valorSeFalso
*/

console.log("\n=== OPERADOR TERN√ÅRIO ===");

let idadeUsuario = 16;
let status = idadeUsuario >= 18 ? "Adulto" : "Menor";
console.log(`Status: ${status}`);

// Tern√°rio aninhado (use com modera√ß√£o)
let pontuacao = 85;
let classificacao = pontuacao >= 90 ? "Ouro" : 
                   pontuacao >= 70 ? "Prata" : 
                   pontuacao >= 50 ? "Bronze" : "Sem medalha";
console.log(`Classifica√ß√£o: ${classificacao}`);

// Exemplo pr√°tico: definir sauda√ß√£o baseada no hor√°rio
let hora = new Date().getHours();
let saudacao = hora < 12 ? "Bom dia!" : 
               hora < 18 ? "Boa tarde!" : "Boa noite!";
console.log(saudacao);

// ==========================================
// 3. SWITCH CASE
// ==========================================

/*
O switch √© √∫til quando voc√™ tem muitas condi√ß√µes baseadas
no mesmo valor. √â mais leg√≠vel que m√∫ltiplos if/else if.
*/

console.log("\n=== SWITCH CASE ===");

let diaSemana = 3;
let nomeDia;

switch (diaSemana) {
    case 1:
        nomeDia = "Segunda-feira";
        break;
    case 2:
        nomeDia = "Ter√ßa-feira";
        break;
    case 3:
        nomeDia = "Quarta-feira";
        break;
    case 4:
        nomeDia = "Quinta-feira";
        break;
    case 5:
        nomeDia = "Sexta-feira";
        break;
    case 6:
        nomeDia = "S√°bado";
        break;
    case 7:
        nomeDia = "Domingo";
        break;
    default:
        nomeDia = "Dia inv√°lido";
}

console.log(`Hoje √©: ${nomeDia}`);

// Switch com agrupamento de casos
let mes = 12;
let estacao;

switch (mes) {
    case 12:
    case 1:
    case 2:
        estacao = "Ver√£o";
        break;
    case 3:
    case 4:
    case 5:
        estacao = "Outono";
        break;
    case 6:
    case 7:
    case 8:
        estacao = "Inverno";
        break;
    case 9:
    case 10:
    case 11:
        estacao = "Primavera";
        break;
    default:
        estacao = "M√™s inv√°lido";
}

console.log(`Esta√ß√£o: ${estacao}`);

// Switch com strings
let operacao = "soma";
let a = 10;
let b = 5;
let resultado;

switch (operacao) {
    case "soma":
        resultado = a + b;
        break;
    case "subtracao":
        resultado = a - b;
        break;
    case "multiplicacao":
        resultado = a * b;
        break;
    case "divisao":
        resultado = b !== 0 ? a / b : "Erro: divis√£o por zero";
        break;
    default:
        resultado = "Opera√ß√£o inv√°lida";
}

console.log(`${a} ${operacao} ${b} = ${resultado}`);

// ==========================================
// 4. LOOP FOR
// ==========================================

/*
O loop for √© usado quando voc√™ sabe quantas vezes quer repetir algo.
Sintaxe: for (inicializa√ß√£o; condi√ß√£o; incremento) { c√≥digo }
*/

console.log("\n=== LOOP FOR ===");

// For b√°sico - contando de 1 a 5
console.log("Contando de 1 a 5:");
for (let i = 1; i <= 5; i++) {
    console.log(`N√∫mero: ${i}`);
}

// For com decremento
console.log("\nContagem regressiva:");
for (let i = 5; i >= 1; i--) {
    console.log(`${i}...`);
}
console.log("üöÄ Decolagem!");

// For com incremento diferente
console.log("\nN√∫meros pares de 0 a 10:");
for (let i = 0; i <= 10; i += 2) {
    console.log(i);
}

// For aninhado - tabuada
console.log("\nTabuada do 1 ao 3:");
for (let i = 1; i <= 3; i++) {
    console.log(`\nTabuada do ${i}:`);
    for (let j = 1; j <= 5; j++) {
        console.log(`${i} x ${j} = ${i * j}`);
    }
}

// ==========================================
// 5. LOOP WHILE
// ==========================================

/*
O while executa enquanto uma condi√ß√£o for verdadeira.
Use quando n√£o souber exatamente quantas itera√ß√µes ser√£o necess√°rias.
*/

console.log("\n=== LOOP WHILE ===");

// While b√°sico
let contador = 1;
console.log("Contando com while:");
while (contador <= 5) {
    console.log(`Contador: ${contador}`);
    contador++; // IMPORTANTE: sempre incrementar para evitar loop infinito!
}

// Exemplo pr√°tico: adivinhar n√∫mero
let numeroSecreto = 7;
let tentativa = 1;
let palpite = Math.floor(Math.random() * 10) + 1; // N√∫mero aleat√≥rio de 1 a 10

console.log("\nJogo de adivinha√ß√£o (simulado):");
while (palpite !== numeroSecreto && tentativa <= 3) {
    console.log(`Tentativa ${tentativa}: Palpite ${palpite} - Errou!`);
    tentativa++;
    palpite = Math.floor(Math.random() * 10) + 1;
}

if (palpite === numeroSecreto) {
    console.log(`üéâ Acertou! O n√∫mero era ${numeroSecreto}`);
} else {
    console.log(`üòû N√£o conseguiu adivinhar. O n√∫mero era ${numeroSecreto}`);
}

// ==========================================
// 6. LOOP DO-WHILE
// ==========================================

/*
O do-while executa o c√≥digo pelo menos uma vez,
depois verifica a condi√ß√£o para continuar.
*/

console.log("\n=== LOOP DO-WHILE ===");

let numero = 1;
console.log("Do-while - executa pelo menos uma vez:");
do {
    console.log(`N√∫mero: ${numero}`);
    numero++;
} while (numero <= 3);

// Exemplo: valida√ß√£o de entrada (simulado)
let senha;
let tentativas = 0;
const senhaCorreta = "123456";

console.log("\nSimula√ß√£o de valida√ß√£o de senha:");
do {
    tentativas++;
    // Simulando diferentes tentativas
    if (tentativas === 1) senha = "123";
    else if (tentativas === 2) senha = "password";
    else senha = "123456";
    
    console.log(`Tentativa ${tentativas}: Senha "${senha}"`);
    
    if (senha !== senhaCorreta) {
        console.log("‚ùå Senha incorreta!");
    }
} while (senha !== senhaCorreta && tentativas < 3);

if (senha === senhaCorreta) {
    console.log("‚úÖ Acesso liberado!");
} else {
    console.log("üîí Acesso bloqueado - muitas tentativas!");
}

// ==========================================
// 7. CONTROLE DE FLUXO - BREAK E CONTINUE
// ==========================================

console.log("\n=== BREAK E CONTINUE ===");

// BREAK - interrompe o loop completamente
console.log("Exemplo com BREAK:");
for (let i = 1; i <= 10; i++) {
    if (i === 6) {
        console.log("Encontrou o 6, parando o loop!");
        break; // Sai do loop
    }
    console.log(`N√∫mero: ${i}`);
}

// CONTINUE - pula para a pr√≥xima itera√ß√£o
console.log("\nExemplo com CONTINUE:");
for (let i = 1; i <= 10; i++) {
    if (i % 2 === 0) {
        continue; // Pula n√∫meros pares
    }
    console.log(`N√∫mero √≠mpar: ${i}`);
}

// Exemplo pr√°tico: procurar item em lista
let frutas = ["ma√ß√£", "banana", "laranja", "uva", "manga"];
let frutaProcurada = "laranja";
let encontrada = false;

console.log("\nProcurando por 'laranja' na lista:");
for (let i = 0; i < frutas.length; i++) {
    console.log(`Verificando: ${frutas[i]}`);
    if (frutas[i] === frutaProcurada) {
        console.log(`‚úÖ Encontrou ${frutaProcurada} na posi√ß√£o ${i}!`);
        encontrada = true;
        break; // Para de procurar quando encontrar
    }
}

if (!encontrada) {
    console.log(`‚ùå ${frutaProcurada} n√£o foi encontrada.`);
}

// ==========================================
// 8. FOR...IN E FOR...OF
// ==========================================

console.log("\n=== FOR...IN E FOR...OF ===");

// FOR...IN - itera sobre as chaves/√≠ndices
let pessoa = {
    nome: "Jo√£o",
    idade: 30,
    cidade: "S√£o Paulo"
};

console.log("FOR...IN com objeto (chaves):");
for (let chave in pessoa) {
    console.log(`${chave}: ${pessoa[chave]}`);
}

let cores = ["vermelho", "azul", "verde"];
console.log("\nFOR...IN com array (√≠ndices):");
for (let indice in cores) {
    console.log(`√çndice ${indice}: ${cores[indice]}`);
}

// FOR...OF - itera sobre os valores
console.log("\nFOR...OF com array (valores):");
for (let cor of cores) {
    console.log(`Cor: ${cor}`);
}

// FOR...OF com strings
let palavra = "JavaScript";
console.log("\nFOR...OF com string:");
for (let letra of palavra) {
    console.log(letra);
}

// ==========================================
// 9. EXEMPLOS PR√ÅTICOS AVAN√áADOS
// ==========================================

console.log("\n=== EXEMPLOS PR√ÅTICOS ===");

// 1. Calculadora de m√©dia de notas
function calcularMedia() {
    let notas = [8.5, 7.2, 9.1, 6.8, 8.9];
    let soma = 0;
    
    console.log("Calculando m√©dia das notas:");
    for (let i = 0; i < notas.length; i++) {
        soma += notas[i];
        console.log(`Nota ${i + 1}: ${notas[i]}`);
    }
    
    let media = soma / notas.length;
    console.log(`M√©dia: ${media.toFixed(2)}`);
    
    if (media >= 7) {
        console.log("‚úÖ Aprovado!");
    } else if (media >= 5) {
        console.log("‚ö†Ô∏è Recupera√ß√£o");
    } else {
        console.log("‚ùå Reprovado");
    }
}

calcularMedia();

// 2. Contador de caracteres
function contarCaracteres(texto) {
    let vogais = 0;
    let consoantes = 0;
    let espacos = 0;
    let numeros = 0;
    
    console.log(`\nAnalisando o texto: "${texto}"`);
    
    for (let char of texto.toLowerCase()) {
        if (char === ' ') {
            espacos++;
        } else if ('aeiou'.includes(char)) {
            vogais++;
        } else if (char >= 'a' && char <= 'z') {
            consoantes++;
        } else if (char >= '0' && char <= '9') {
            numeros++;
        }
    }
    
    console.log(`Vogais: ${vogais}`);
    console.log(`Consoantes: ${consoantes}`);
    console.log(`Espa√ßos: ${espacos}`);
    console.log(`N√∫meros: ${numeros}`);
}

contarCaracteres("JavaScript √© incr√≠vel! 2024");

// 3. Gerador de padr√µes
function gerarPadrao(linhas) {
    console.log(`\nPadr√£o triangular com ${linhas} linhas:`);
    
    for (let i = 1; i <= linhas; i++) {
        let linha = "";
        
        // Adiciona espa√ßos
        for (let j = 1; j <= linhas - i; j++) {
            linha += " ";
        }
        
        // Adiciona asteriscos
        for (let k = 1; k <= 2 * i - 1; k++) {
            linha += "*";
        }
        
        console.log(linha);
    }
}

gerarPadrao(5);

// ==========================================
// 10. EXERC√çCIOS PROPOSTOS
// ==========================================

/*
EXERC√çCIOS PARA PRATICAR:

1. CONDICIONAIS:
   - Crie um programa que classifique a temperatura:
     * Abaixo de 15¬∞C: "Frio"
     * 15¬∞C a 25¬∞C: "Agrad√°vel"
     * 26¬∞C a 35¬∞C: "Quente"
     * Acima de 35¬∞C: "Muito quente"

2. SWITCH:
   - Crie uma calculadora que receba dois n√∫meros e uma opera√ß√£o
   - Use switch para determinar qual opera√ß√£o executar
   - Trate o caso de divis√£o por zero

3. LOOPS:
   - Imprima todos os n√∫meros de 1 a 100
   - Mas substitua m√∫ltiplos de 3 por "Fizz"
   - M√∫ltiplos de 5 por "Buzz"
   - M√∫ltiplos de ambos por "FizzBuzz"

4. WHILE:
   - Crie um jogo onde o usu√°rio tenta adivinhar um n√∫mero
   - O programa deve dar dicas ("maior" ou "menor")
   - Limite a 5 tentativas

5. FOR ANINHADO:
   - Crie uma tabuada completa (1 a 10)
   - Formate a sa√≠da de forma organizada

6. BREAK/CONTINUE:
   - Percorra um array de n√∫meros
   - Pule n√∫meros negativos (continue)
   - Pare quando encontrar um n√∫mero maior que 100 (break)

7. DESAFIO:
   - Crie um programa que verifique se um n√∫mero √© primo
   - Use loops para testar divisibilidade
   - Otimize testando apenas at√© a raiz quadrada do n√∫mero
*/

// ==========================================
// 11. BOAS PR√ÅTICAS
// ==========================================

/*
BOAS PR√ÅTICAS PARA ESTRUTURAS DE CONTROLE:

‚úÖ FA√áA:
- Use === ao inv√©s de == para compara√ß√µes
- Sempre use chaves {} mesmo para uma linha
- Indente o c√≥digo corretamente
- Use nomes descritivos para vari√°veis de controle
- Evite loops infinitos (sempre incremente/decremente)
- Use break e continue com modera√ß√£o
- Prefira for...of para iterar arrays
- Use for...in para iterar objetos

‚ùå N√ÉO FA√áA:
- N√£o esque√ßa o break no switch
- N√£o crie condi√ß√µes muito complexas
- N√£o use loops aninhados desnecessariamente
- N√£o modifique a vari√°vel de controle dentro do loop for
- N√£o use var dentro de loops (use let)
*/

// Exemplo de c√≥digo limpo vs c√≥digo problem√°tico

// ‚ùå Problem√°tico
/*
if(idade>=18)console.log("adulto");else console.log("menor");
for(var i=0;i<10;i++){if(i%2==0)continue;console.log(i);}
*/

// ‚úÖ Limpo e leg√≠vel
if (idade >= 18) {
    console.log("Adulto");
} else {
    console.log("Menor de idade");
}

for (let i = 0; i < 10; i++) {
    if (i % 2 === 0) {
        continue;
    }
    console.log(i);
}

console.log("\nüéâ Parab√©ns! Voc√™ concluiu o m√≥dulo de Estruturas de Controle!");
console.log("üìö Pr√≥ximo m√≥dulo: Fun√ß√µes e Escopos");

// ==========================================
// FIM DO M√ìDULO 2
// ==========================================